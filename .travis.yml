---
jobs:
  include:
    - stage: test
      cache: ccache
      addons:
        apt:
          packages:
            - cmake
      services:
        - docker
      install:
        - cp taskserver/taskserver.env.example taskserver/taskserver.env
        - cp certbot/certbot.env.example certbot/certbot.env
        - echo 'LE_DISABLE=true' >> taskserver/taskserver.env
        - echo 'LE_DISABLE=true' >> certbot/certbot.env
        # - mkdir taskserver/server_certs
        # - cp taskserver/client_certs/client.cert.pem.example taskserver/client_certs/client.cert.pem
        # - cp taskserver/client_certs/client.key.pem.example taskserver/client_certs/client.key.pem
        - docker-compose up -d
        - curl -L https://taskwarrior.org/download/task-2.5.1.tar.gz -o /tmp/task.tar.gz
        - mkdir /tmp/task
        - tar xzf /tmp/task.tar.gz -C /tmp/task --strip 1
        - cd /tmp/task
        - cmake -DCMAKE_BUILD_TYPE=release .
        - make
        - sudo make install
        - cd -
      script:
        - docker-compose exec taskserver sh -c 'echo $TASKDDATA'
        - export USER_UUID=$(docker-compose exec taskserver sh -c 'ls -1 "$TASKDDATA/orgs/$TASKD_ORGNAME/users"' | sed 's/\r//')
        - printf "new user UUID is $USER_UUID"
        - yes | task version
        # wait for the certs to be created
        - sleep 15
        - cp taskserver/client_certs/user.cert.pem ~/.task/
        - cp taskserver/client_certs/user.key.pem ~/.task/
        - cp taskserver/client_certs/ca.cert.pem ~/.task/ca.cert.pem
        - ls -clash ~/.task
        - yes | task config taskd.certificate -- ~/.task/user.cert.pem
        - yes | task config taskd.key -- ~/.task/user.key.pem
        - yes | task config taskd.ca -- ~/.task/ca.cert.pem
        - yes | task config taskd.server -- localhost:53589
        - yes | task config taskd.credentials -- My Org/user/$USER_UUID
        - yes | task config taskd.trust -- ignore hostname
        - task add test task
        - task diagnostics
        - cat ~/.taskrc
        - yes | task rc.debug=1 rc.debug.tls=2 sync init
      after_script:
        - docker-compose logs
